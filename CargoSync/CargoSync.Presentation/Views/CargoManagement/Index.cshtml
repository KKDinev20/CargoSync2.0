@model CargoManagementViewModel

@{
    ViewData["Title"] = "CargoSync";
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<section class="dashboard">
    <div class="dash-content">
        <div class="activity">
            <div class="title">
                <span class="text">Cargo Details</span>
            </div>
            <div class="activity-data">
                <canvas id="cargoChart"></canvas>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                    var cargoNames = @Html.Raw(Json.Serialize(Model.Cargos.Select(c => c.Description).ToList()));
                    var cargoQuantities = @Html.Raw(Json.Serialize(Model.Cargos.Select(c => c.Quantity).ToList()));

                    var ctx = document.getElementById('cargoChart').getContext('2d');
                    var cargoChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: cargoNames,
                            datasets: [{
                                label: 'Cargo Quantities',
                                data: cargoQuantities,
                                backgroundColor: getRedGradient(ctx),
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });

                    function getRedGradient(context) {
                        var gradient = context.createLinearGradient(0, 0, 0, 400);
                        gradient.addColorStop(0, 'rgba(187, 44, 44, 1)');
                        gradient.addColorStop(1, 'rgba(148, 37, 37, 1)');
                        return gradient;
                    }
                </script>
            </div>
        </div>

        <div class="activity">
            <div class="title">
                <span class="text">Revenue Over Time</span>
            </div>
            <div class="activity-data">
                <canvas id="revenueChart"></canvas>
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script>
                    var revenueMonths = @Html.Raw(Json.Serialize(Model.Revenues.Select(r => r.Month).Distinct().ToList()));
                    var revenueAmounts = @Html.Raw(Json.Serialize(Model.Revenues
                        .GroupBy(r => r.Month)
                        .Select(group => group.Sum(r => r.Amount))
                        .ToList()));

                    var ctx = document.getElementById('revenueChart').getContext('2d');

                    var revenueChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: revenueMonths,
                            datasets: [{
                                label: 'Revenue',
                                pointBackgroundColor: 'white',
                                borderWidth: 1,
                                borderColor: '#911215',
                                data: revenueAmounts,
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: true,
                            elements: {
                                line: {
                                    tension: 0.4
                                }
                            },
                            plugins: {
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    titleFontFamily: 'Open Sans',
                                    backgroundColor: 'rgba(0,0,0,0.3)',
                                    titleFontColor: 'red',
                                    caretSize: 5,
                                    cornerRadius: 2,
                                    xPadding: 10,
                                    yPadding: 10
                                }
                            }
                        }
                    });
                </script>
            </div>
        </div>

        <!-- User Information -->
        <div class="activity">
            <div class="title">
                <span class="text">User Information</span>
            </div>
            <div class="activity-data">
                <table class="table">
                    <tbody>
                        <tr class="row-header">
                            <td><span class="data-title">UserID</span></td>
                            <td><span class="data-title">UserName</span></td>
                            <td><span class="data-title">UserType</span></td>
                        </tr>

                        @foreach (var user in Model.Users)
                        {
                            <tr class="row">
                                <td><span class="data-title">@user.UserID</span></td>
                                <td><span class="data-title">@user.UserName</span></td>
                                <td><span class="data-title">@user.UserType</span></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="pagination-buttons">
                @if (ViewBag.TotalPages > 1)
                {
                    if (ViewBag.CurrentPage > 1)
                    {
                        <a class="pagination-button" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })">Previous</a>
                    }

                    for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                        <a class="pagination-button @(i == ViewBag.CurrentPage ? "active" : "")" href="@Url.Action("Index", new { page = i })">@i</a>
                    }

                    if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                        <a class="pagination-button" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })">Next</a>
                    }
                }
            </div>
        </div>
    </div>
</section>
